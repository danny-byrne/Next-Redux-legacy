{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dannybyrne/CODE/doodles/hello-next/pages/index.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { decrementCounter, incrementCounter } from \"../redux/actions/counterActions\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counter: state.counter.value\n  };\n};\n\nvar mapDispatchToProps = {\n  incrementCounter: incrementCounter,\n  decrementCounter: decrementCounter\n};\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  _createClass(App, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.incrementCounter,\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.decrementCounter,\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/dannybyrne/CODE/doodles/hello-next/pages/index.jsx"],"names":["React","useState","connect","decrementCounter","incrementCounter","mapStateToProps","state","counter","value","mapDispatchToProps","App","store","props","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,gBADF,EAEEC,gBAFF,QAGO,iCAHP;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCC,IAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcC;AADW,GAAZ;AAAA,CAAxB;;AAIA,IAAMC,kBAAkB,GAAG;AACzBL,EAAAA,gBAAgB,EAAEA,gBADO;AAEzBD,EAAAA,gBAAgB,EAAEA;AAFO,CAA3B;;IAKMO,G;;;;;;;0CAC8B;AAAA,UAATC,KAAS,QAATA,KAAS;AAAE;;;AAEpC,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AACP,0BACE;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKA,KAAL,CAAWR,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWT,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAK,KAAKS,KAAL,CAAWL;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;;;EAfeP,KAAK,CAACa,S;;AAkBxB,eAAeX,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CC,GAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  decrementCounter,\n  incrementCounter,\n} from \"../redux/actions/counterActions\";\n\nconst mapStateToProps = (state) => ({\n  counter: state.counter.value,\n});\n\nconst mapDispatchToProps = {\n  incrementCounter: incrementCounter,\n  decrementCounter: decrementCounter,\n};\n\nclass App extends React.Component {\n  static getInitialProps({ store }) {}\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.props.incrementCounter}>Increment</button>\n        <button onClick={this.props.decrementCounter}>Decrement</button>\n        <h1>{this.props.counter}</h1>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}